Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000;
ii. Business table = 10000;
iii. Category table = 10000;
iv. Checkin table = 10000;
v. elite_years table = 10000;
vi. friend table = 10000;
vii. hours table = 10000;
viii. photo table = 10000;
ix. review table = 10000;
x. tip table = 10000;
xi. user table = 10000;
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 100000 (primary key "id");
ii. Hours = 1562 (foreign key "business_id");
iii. Category = 2643 (foreign key "business_id");
iv. Attribute = 1115 (foreign key "business_id");
v. Review = 100000 (primary key "id"); 8090 (foreign key "business_id"); 9581 (foreign key "user_id");
vi. Checkin = 493 (foreign key "business_id");
vii. Photo = 10000 (Primary key "id"); 6493 (foreign key "business_id"); 
viii. Tip = 537 (foreign key "user_id"); 3979 (Foreign key "business_id"); 
ix. User = 10000 (primary key "id");
x. Friend = 11 (foreign key "user_id");
xi. Elite_years = 2780 (foreign key "user_id");

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No.
	
	
	SQL code used to arrive at answer: 

select *
From user
Where (
id or 
name or 
review_count or 
yelping_since or 
useful or 
funny or 
cool or 
fans or 
average_stars or 
compliment_hot or 
compliment_more or 
compliment_profile or 
compliment_cute or 
compliment_list or 
compliment_note or 
compliment_plain or 
compliment_cool or 
compliment_funny or
compliment_writer or 
compliment_photos
) is null
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg:	3.7082 
		
	
	ii. Table: Business, Column: Stars
	
		min:	1	max:	5	avg:	3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg:	0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg:	1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg:	24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

select City,
Sum(review_count) as number_of_reviews
from business
Group by city
Order by number_of_reviews desc
	
	
	Copy and Paste the Result Below:
+-----------------+-------------------+
| city            | number_of_reviews |
+-----------------+-------------------+
| Las Vegas       |             82854 |
| Phoenix         |             34503 |
| Toronto         |             24113 |
| Scottsdale      |             20614 |
| Charlotte       |             12523 |
| Henderson       |             10871 |
| Tempe           |             10504 |
| Pittsburgh      |              9798 |
| Montréal        |              9448 |
| Chandler        |              8112 |
| Mesa            |              6875 |
| Gilbert         |              6380 |
| Cleveland       |              5593 |
| Madison         |              5265 |
| Glendale        |              4406 |
| Mississauga     |              3814 |
| Edinburgh       |              2792 |
| Peoria          |              2624 |
| North Las Vegas |              2438 |
| Markham         |              2352 |
| Champaign       |              2029 |
| Stuttgart       |              1849 |
| Surprise        |              1520 |
| Lakewood        |              1465 |
| Goodyear        |              1155 |
+-----------------+-------------------+
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
select City,
stars as star_rating,
count(*) as count
from business
where City = 'Avon'
Group by stars


Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+------+-------------+-------+
| city | star_rating | count |
+------+-------------+-------+
| Avon |         1.5 |     1 |
| Avon |         2.5 |     2 |
| Avon |         3.5 |     3 |
| Avon |         4.0 |     2 |
| Avon |         4.5 |     1 |
| Avon |         5.0 |     1 |
+------+-------------+-------+

ii. Beachwood

SQL code used to arrive at answer:
select City,
stars as star_rating,
count(*) as count
from business
where City = 'Beachwood'
Group by stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-----------+-------------+-------+
| city      | star_rating | count |
+-----------+-------------+-------+
| Beachwood |         2.0 |     1 |
| Beachwood |         2.5 |     1 |
| Beachwood |         3.0 |     2 |
| Beachwood |         3.5 |     2 |
| Beachwood |         4.0 |     1 |
| Beachwood |         4.5 |     2 |
| Beachwood |         5.0 |     5 |
+-----------+-------------+-------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
select Name,
review_count
From User 
Order by review_count desc
Limit 3	
		
	Copy and Paste the Result Below:
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+
		


8. Does posing more reviews correlate with more fans?
select Name,
review_count,
fans
From User 
Order by review_count desc

	Please explain your findings and interpretation of the results:
+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |
| Harald    |         1153 |  311 |
| eric      |         1116 |   16 |
| Roanna    |         1039 |  104 |
| Mimi      |          968 |  497 |
| Christine |          930 |  173 |
| Ed        |          904 |   38 |
| Nicole    |          864 |   43 |
| Fran      |          862 |  124 |
| Mark      |          861 |  115 |
| Christina |          842 |   85 |
| Dominic   |          836 |   37 |
| Lissa     |          834 |  120 |
| Lisa      |          813 |  159 |
| Alison    |          775 |   61 |
| Sui       |          754 |   78 |
| Tim       |          702 |   35 |
| L         |          696 |   10 |
| Angela    |          694 |  101 |
| Crissy    |          676 |   25 |
| Lyn       |          675 |   45 |
+-----------+--------------+------+

Not really. At table we see Harald and Mimi with more fans than top 1 Gerald. 

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
+-----------+
| love_test |
+-----------+
|      1780 |
+-----------+

+-----------+
| hate_test |
+-----------+
|       232 |
+-----------+

More reviews with word love.

	
	SQL code used to arrive at answer:

Select Count(text) as love_test
From review
Where text LIKE '%love%';
	
Select Count(text) as hate_test
From review
Where text LIKE '%hate%';

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

select Name,
fans
From User
Order by fans desc
Limit 10
	
	Copy and Paste the Result Below:
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

No, they have same hours distribution Friday 8:00 - 18:30

ii. Do the two groups you chose to analyze have a different number of reviews?
         
Yes, they have different number of reviews.
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

Yes, business with 4-5 stars usually near big cities. Business with 2-3 stars locate farther from big cities.

SQL code used for analysis:

Select Avg(review_count), 
address,
city,
hours
From business, hours
Where stars >= 2 And stars <= 3 And city = 'Toronto';

+-------------------+----------------+---------+-------------------+
| AVG(review_count) | address        | city    | hours             |
+-------------------+----------------+---------+-------------------+
|     19.5211726384 | 220 Bloor St W | Toronto | Friday|8:00-18:30 |
+-------------------+----------------+---------+-------------------+

Select Avg(review_count), 
address,
city,
hours
From business, hours
Where stars >= 4 And stars <= 5 And city = 'Toronto';

+-------------------+---------------+---------+-------------------+
| AVG(review_count) | address       | city    | hours             |
+-------------------+---------------+---------+-------------------+
|     22.6674259681 | 275 Unwin Ave | Toronto | Friday|8:00-18:30 |
+-------------------+---------------+---------+-------------------+

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
 The first difference is that average rating for closed business is lower. For closed ones average stars rating equals 3.52039473684 and for open ones - 3.67900943396.           
         
ii. Difference 2:
  The second difference is that average review count for closed business is lower than for open. For closed ones average review count equals 23.1980263158  and for open ones -  31.7570754717.        
         
         
SQL code used for analysis:

Select avg(Stars)
from business
Where is_open = 0

+---------------+
|    avg(Stars) |
+---------------+
| 3.52039473684 |
+---------------+

Select avg(Stars)
from business
Where is_open = 1

+---------------+
|    avg(Stars) |
+---------------+
| 3.67900943396 |
+---------------+

Select avg(review_count)
from business
Where is_open = 0

+-------------------+
| avg(review_count) |
+-------------------+
|     23.1980263158 |
+-------------------+

Select avg(review_count)
from business
Where is_open = 1

+-------------------+
| avg(review_count) |
+-------------------+
|     31.7570754717 |
+-------------------+
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
    Dependence between useful reviews and stars at Las Vegas    
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
    As we can see average useful coefficient equals 0.593023255814 for 5 star review, for 4 star - 1.1320754717, for 3 star -  1.8, for 2 star - 1.18181818182, for 1 star - 1.13043478261. So the most informative reviews are neutral, cause people can tell about all minuses and pluses.                          
                  
iii. Output of your finished dataset:
+-----------+-------+--------+----------------+
| city      | stars | useful | average_useful |
+-----------+-------+--------+----------------+
| Las Vegas |     5 |      1 | 0.593023255814 |
+-----------+-------+--------+----------------+

+-----------+-------+--------+----------------+
| city      | stars | useful | average_useful |
+-----------+-------+--------+----------------+
| Las Vegas |     4 |      9 |   1.1320754717 |
+-----------+-------+--------+----------------+   

+-----------+-------+--------+----------------+
| city      | stars | useful | average_useful |
+-----------+-------+--------+----------------+
| Las Vegas |     3 |      2 |            1.8 |
+-----------+-------+--------+----------------+      

+-----------+-------+--------+----------------+
| city      | stars | useful | average_useful |
+-----------+-------+--------+----------------+
| Las Vegas |     2 |      2 |  1.18181818182 |
+-----------+-------+--------+----------------+

+-----------+-------+--------+----------------+
| city      | stars | useful | average_useful |
+-----------+-------+--------+----------------+
| Las Vegas |     1 |      0 |  1.13043478261 |
+-----------+-------+--------+----------------+

         
iv. Provide the SQL code you used to create your final dataset:

Select B.City,
R.Stars,
R.useful,
Avg(useful) as average_useful
From Business B Inner join Review R on B.id = R.business_id
where City = 'Las Vegas' and R.Stars = 5

Select B.City,
R.Stars,
R.useful,
Avg(useful) as average_useful
From Business B Inner join Review R on B.id = R.business_id
where City = 'Las Vegas' and R.Stars = 4

Select B.City,
R.Stars,
R.useful,
Avg(useful) as average_useful
From Business B Inner join Review R on B.id = R.business_id
where City = 'Las Vegas' and R.Stars = 3

Select B.City,
R.Stars,
R.useful,
Avg(useful) as average_useful
From Business B Inner join Review R on B.id = R.business_id
where City = 'Las Vegas' and R.Stars = 2

Select B.City,
R.Stars,
R.useful,
Avg(useful) as average_useful
From Business B Inner join Review R on B.id = R.business_id
where City = 'Las Vegas' and R.Stars = 1